{"version":3,"sources":["components/IdentificationCard.js","App.js","reportWebVitals.js","index.js"],"names":["IdCardWrapper","styled","div","props","size","TitleArea","Title","h1","Subtitle","h2","CreditsArea","ChipArea","Name","h3","ApollitoIcon","style","color","IdentificationCard","apollitos","nombre","rango","troperos","App","className","map","tropero","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAMMA,EAAgBC,IAAOC,IAAV,4iEAGR,SAACC,GAAD,OAAYA,EAAMC,KAAO,KAAOD,EAAMC,KAAO,QAC5C,SAACD,GAAD,OAAYA,EAAMC,KAAO,MAAQD,EAAMC,KAAO,SAYpDC,EAAYJ,IAAOC,IAAV,qJAQTI,EAAQL,IAAOM,GAAV,uFAKLC,EAAWP,IAAOQ,GAAV,0FAKRC,EAAcT,IAAOC,IAAV,2MAUXS,EAAWV,IAAOC,IAAV,4HAORU,EAAOX,IAAOY,GAAV,0JAQJC,EAAe,WACnB,OAAO,cAAC,IAAD,CAASC,MAAO,CAAEC,MAAO,cAGrBC,EAAqB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MACrD,OACE,mCACE,eAACpB,EAAD,CAAeI,KAAM,EAArB,UACE,eAACC,EAAD,WACE,cAACC,EAAD,6BACA,cAACE,EAAD,UAAWY,OAEb,eAACV,EAAD,WACE,cAAC,EAAD,IADF,IACmB,iCAAOQ,EAAP,mBAEnB,cAACP,EAAD,UACE,cAAC,IAAD,CAAeP,KAAM,QAEvB,cAACQ,EAAD,UAAOO,UCjFTE,EAAW,CACf,CACEF,OAAQ,mCACRD,UAAW,GACXE,MAAO,WAET,CACED,OAAQ,uCACRD,UAAW,GACXE,MAAO,WAET,CACED,OAAQ,6BACRD,UAAW,EACXE,MAAO,WAET,CACED,OAAQ,+BACRD,UAAW,EACXE,MAAO,WAET,CACED,OAAQ,kCACRD,UAAW,EACXE,MAAO,WAET,CACED,OAAQ,gCACRD,UAAW,EACXE,MAAO,kBAyBIE,MArBf,WACE,OACE,mCACE,qBAAKC,UAAU,aAAf,SACE,yBAASA,UAAU,UAAnB,SACGF,EAASG,KAAI,SAACC,GAAD,OACZ,qCACE,cAAC,EAAD,CACEP,UAAWO,EAAQP,UACnBC,OAAQM,EAAQN,OAAOO,cACvBN,MAAOK,EAAQL,QAEjB,qBAAKG,UAAU,sBCnCdI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e25acbd9.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { FcSimCardChip } from 'react-icons/fc'\r\nimport { GiToken } from 'react-icons/gi'\r\nimport { GrMoney } from 'react-icons/gr'\r\nimport { IconContext } from 'react-icons'\r\n\r\nconst IdCardWrapper = styled.div`\r\n  border-radius: 30px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  width: ${(props) => (props.size ? 85.6 * props.size : 85.6)}mm;\r\n  height: ${(props) => (props.size ? 53.98 * props.size : 53.98)}mm;\r\n  display: grid;\r\n  color: white !important;\r\n  grid-template:\r\n    'TitleArea TitleArea'\r\n    'CreditsArea ChipArea'\r\n    'Name Name';\r\n  grid-gap: 10px;\r\n  padding: 35px;\r\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:svgjs='http://svgjs.com/svgjs' width='650' height='420' preserveAspectRatio='none' viewBox='0 0 650 420'%3e%3cg mask='url(%26quot%3b%23SvgjsMask1010%26quot%3b)' fill='none'%3e%3crect width='650' height='420' x='0' y='0' fill='url(%23SvgjsLinearGradient1011)'%3e%3c/rect%3e%3cpath d='M650 0L621.57 0L650 176.47z' fill='rgba(255%2c 255%2c 255%2c .1)'%3e%3c/path%3e%3cpath d='M621.57 0L650 176.47L650 199.48L618.87 0z' fill='rgba(255%2c 255%2c 255%2c .075)'%3e%3c/path%3e%3cpath d='M618.87 0L650 199.48L650 211.76999999999998L300.89 0z' fill='rgba(255%2c 255%2c 255%2c .05)'%3e%3c/path%3e%3cpath d='M300.89 0L650 211.76999999999998L650 277.59L251.1 0z' fill='rgba(255%2c 255%2c 255%2c .025)'%3e%3c/path%3e%3cpath d='M0 420L229.36 420L0 328.2z' fill='rgba(0%2c 0%2c 0%2c .1)'%3e%3c/path%3e%3cpath d='M0 328.2L229.36 420L377.95000000000005 420L0 215.10999999999999z' fill='rgba(0%2c 0%2c 0%2c .075)'%3e%3c/path%3e%3cpath d='M0 215.11L377.95000000000005 420L408.4200000000001 420L0 164.61z' fill='rgba(0%2c 0%2c 0%2c .05)'%3e%3c/path%3e%3cpath d='M0 164.61L408.4200000000001 420L489.49000000000007 420L0 156.87z' fill='rgba(0%2c 0%2c 0%2c .025)'%3e%3c/path%3e%3c/g%3e%3cdefs%3e%3cmask id='SvgjsMask1010'%3e%3crect width='650' height='420' fill='white'%3e%3c/rect%3e%3c/mask%3e%3clinearGradient x1='91.15%25' y1='-13.69%25' x2='8.85%25' y2='113.69%25' gradientUnits='userSpaceOnUse' id='SvgjsLinearGradient1011'%3e%3cstop stop-color='rgba(0%2c 128%2c 51%2c 1)' offset='0'%3e%3c/stop%3e%3cstop stop-color='rgba(14%2c 42%2c 71%2c 1)' offset='0.16'%3e%3c/stop%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e\");\r\n`\r\n\r\nconst TitleArea = styled.div`\r\n  display: flex;\r\n  grid-area: TitleArea;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  height: 35px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-family: 'Bebas Neue', cursive;\r\n  font-size: 60px;\r\n`\r\n\r\nconst Subtitle = styled.h2`\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 40px;\r\n`\r\n\r\nconst CreditsArea = styled.div`\r\n  grid-area: CreditsArea;\r\n  display: grid;\r\n  grid-gap: 35px;\r\n  grid-template-columns: 10px auto;\r\n  font-size: 2em;\r\n  align-items: center;\r\n  font-family: 'Inconsolata';\r\n`\r\n\r\nconst ChipArea = styled.div`\r\n  grid-area: ChipArea;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`\r\n\r\nconst Name = styled.h3`\r\n  grid-area: Name;\r\n  font-family: 'Roboto Mono', monospace;\r\n  font-size: 25px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nconst ApollitoIcon = () => {\r\n  return <GiToken style={{ color: '#E8D84F'}} />\r\n}\r\n\r\nexport const IdentificationCard = ({apollitos, nombre, rango}) => {\r\n  return (\r\n    <>\r\n      <IdCardWrapper size={2}>\r\n        <TitleArea>\r\n          <Title>Apollo ID Card</Title>\r\n          <Subtitle>{rango}</Subtitle>\r\n        </TitleArea>\r\n        <CreditsArea>\r\n          <ApollitoIcon /> <span>{apollitos} apollitos</span>\r\n        </CreditsArea>\r\n        <ChipArea>\r\n          <FcSimCardChip size={100} />\r\n        </ChipArea>\r\n        <Name>{nombre}</Name>\r\n      </IdCardWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { IdentificationCard } from './components/IdentificationCard'\n\nconst troperos = [\n  {\n    nombre: 'LEONARDO GABRIEL OSORIO CASTILLO',\n    apollitos: 10,\n    rango: 'tropero',\n  },\n  {\n    nombre: 'WALTER JOAQUIN\tCONTRERAS\tBOJORQUEZ',\n    apollitos: 30,\n    rango: 'tropero',\n  },\n  {\n    nombre: 'ANTONIO GABRIEL\tMAY\tSOSA',\n    apollitos: 3,\n    rango: 'tropero',\n  },\n  {\n    nombre: 'ABIEL NATANAEL\tCHAN\tVERDIN',\n    apollitos: 0,\n    rango: 'tropero',\n  },\n  {\n    nombre: 'DANIEL JESUS\tBOJORQUEZ\tACOSTA',\n    apollitos: 0,\n    rango: 'tropero',\n  },\n  {\n    nombre: 'Giovanny Gonz√°lez Baltazar',\n    apollitos: 0,\n    rango: 'jefe de tropa',\n  },\n]\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container \">\n        <section className=\"section\">\n          {troperos.map((tropero) => (\n            <>\n              <IdentificationCard\n                apollitos={tropero.apollitos}\n                nombre={tropero.nombre.toUpperCase()}\n                rango={tropero.rango}\n              />\n              <div className=\"mb-6\"></div>\n            </>\n          ))}\n        </section>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './App.sass'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}